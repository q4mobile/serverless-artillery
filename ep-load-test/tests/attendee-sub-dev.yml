config:
  target: wss://attendees.dev.events.q4inc.com/graphql
  ensure:
    max: 5000 # fail if max response time exceeds 5000ms
    maxErrorRate: 0 # fail if error rate exceeds 0%
  phases:
    - duration: 10           # 5 min
      arrivalRate: 1        # 166 attendee's per second ~ 10k per minute
      name: "Perform Attendee load test 300-13-361442613"
  variables:
    meetingId: "361442613"
    companyId: "5ff782c52dab34000885fe61"
  processor: "./hooks/generateAuthTokens.js"
  ws:
    rejectUnauthorized: false
    headers:
      Sec-WebSocket-Protocol: graphql-transport-ws
scenarios:
  - engine: "wsgql"
    name: "Perform Attendee subscription journey to console"
    flow:
      - function: 'connectWSHandler'          
        send: {
          "id": "1",
          "type": "subscribe",
          "payload": {
            "variables": {
              meetingId: "{{ meetingId }}"
            },
            "extensions": {},
            "operationName": "FEATURE_FLAG_SUBSCRIPTION",
            "query": "subscription FEATURE_FLAG_SUBSCRIPTION { onFeatureFlagsChange }"
          }
        }
      - send: {
          "id": "2",
          "type": "subscribe",
          "payload": {
            "variables": {
              meetingId: "{{ meetingId }}"
            },
            "extensions": {},
            "query": "subscription ($meetingId: Int) {
              onEventStartPeriodUpdated(meetingId: $meetingId) {
                event {
                  meetingId
                  branding {
                    registrationPageBranding {
                      broadridgeTelephoneNumber 
                      broadridgeInternationalTelephoneNumber 
                      title 
                      description 
                      openRegistration 
                      proxyWebsiteLink
                      termsAndConditionsUrl
                    }
                  }
                }
                isEventStarted
              }
            }"
          }
        }
      - send: {
          "id": "3",
          "type": "subscribe",
          "payload": {
            "variables": {
              meetingId: "{{ meetingId }}"
            },
            "extensions": {},
            "query": "subscription ($meetingId: Int) {
              onAssetsUpdated(meetingId: $meetingId, contentType: SLIDES)
            }"
          }
        }
      - send: {
          "id": "4",
          "type": "subscribe",
          "payload": {
            "variables": {
              meetingId: "{{ meetingId }}"
            },
            "extensions": {},
            "operationName": "BROADCAST_STATUS_SUBSCRIPTION",
            "query": "subscription BROADCAST_STATUS_SUBSCRIPTION($meetingId: Int) {
              onBroadcastStatusUpdated(meetingId: $meetingId) {
                status
                context
                startTime
                broadcastUrl
              }
            }"
          }
        }
      - send: {
          "id": "5",
          "type": "subscribe",
          "payload": {
            "variables": {
              meetingId: "{{ meetingId }}"
            },
            "extensions": {},
            "query": "subscription ($meetingId: Int) {
              onEventDisasterRecoveryUpdated(meetingId: $meetingId) {
                enabled
                redirectUrl
              }
            }"
          }
        }
      - function: 'calculateSubscriptionTime'
        send: {
          "id": "6",
          "type": "subscribe",
          "payload": {
            "variables": {
              meetingId: "{{ meetingId }}"
            },
            "extensions": {},
            "operationName": "QUESTION_STATUS_SUBSCRIPTION",
            "query": "subscription ($meetingId: Int) {
              onEventQuestionSettingUpdated(meetingId: $meetingId) {
                settings {
                  questionEnabled
                }
              }
            }"
          }
        }        
      - think: {{ end_sub_time }}